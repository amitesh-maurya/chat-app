# =============================================================================
# CHAT APP ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your values
# Make sure to keep .env in your .gitignore file for security

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Prisma database connection string
# For SQLite (development): file:./dev.db
# For PostgreSQL (production): postgresql://user:password@localhost:5432/chatapp
DATABASE_URL="file:./dev.db"

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT Secret for signing authentication tokens
# Generate a secure random string (32+ characters recommended)
# You can use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production"

# JWT Token Expiration (optional, defaults to '24h')
JWT_EXPIRES_IN="7d"

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Backend API Server Port
PORT=3001

# WebSocket Server Port
WS_PORT=3002

# Frontend Application Port (Next.js)
NEXT_PORT=3000

# =============================================================================
# CORS & FRONTEND CONFIGURATION
# =============================================================================
# Frontend URL for CORS configuration
# Development: http://localhost:3000
# Production: https://your-domain.com
FRONTEND_URL="http://localhost:3000"

# Backend API URL (used by frontend)
NEXT_PUBLIC_API_URL="http://localhost:3001"

# WebSocket Server URL (used by frontend)
NEXT_PUBLIC_WS_URL="ws://localhost:3002"

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
# Node environment (development, production, test)
NODE_ENV="development"

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size for uploads (in bytes)
# 5MB = 5 * 1024 * 1024 = 5242880
MAX_FILE_SIZE=5242880

# Upload directory path (relative to backend)
UPLOAD_DIR="uploads"

# Allowed file types for uploads (comma-separated)
ALLOWED_FILE_TYPES="image/jpeg,image/png,image/gif,image/webp,audio/wav,audio/mp3,audio/ogg,video/webm"

# =============================================================================
# REDIS CONFIGURATION (Optional - for production scaling)
# =============================================================================
# Redis connection for session storage and WebSocket scaling
REDIS_URL="redis://localhost:6379"

# =============================================================================
# RATE LIMITING & SECURITY
# =============================================================================
# Requests per window per IP
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes

# Maximum connections per user
MAX_CONNECTIONS_PER_USER=5

# =============================================================================
# EMAIL CONFIGURATION (Optional - for notifications)
# =============================================================================
# SMTP configuration for email notifications
# EMAIL_SERVICE="gmail"
# EMAIL_USER="your-email@gmail.com"
# EMAIL_PASS="your-app-password"

# =============================================================================
# CLOUD SERVICES (Optional - for production)
# =============================================================================
# Cloudinary (for image hosting in production)
# CLOUDINARY_CLOUD_NAME="your-cloud-name"
# CLOUDINARY_API_KEY="your-api-key"
# CLOUDINARY_API_SECRET="your-api-secret"

# =============================================================================
# DATABASE CONNECTION POOL (Optional - for production)
# =============================================================================
# DATABASE_POOL_SIZE=10
# DATABASE_TIMEOUT=30000

# =============================================================================
# LOGGING & MONITORING (Optional)
# =============================================================================
# Log level: 'error', 'warn', 'info', 'debug'
LOG_LEVEL="info"

# Enable request logging
ENABLE_REQUEST_LOGS=true

# =============================================================================
# PRODUCTION SETTINGS (Uncomment for production)
# =============================================================================
# NODE_ENV="production"
# DATABASE_URL="postgresql://username:password@localhost:5432/chatapp_prod"
# FRONTEND_URL="https://your-chat-app.com"
# NEXT_PUBLIC_API_URL="https://api.your-chat-app.com"
# NEXT_PUBLIC_WS_URL="wss://ws.your-chat-app.com"
# JWT_SECRET="your-production-jwt-secret"

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit the actual .env file to version control
# 2. Use environment-specific values for different deployments
# 3. Rotate secrets regularly in production
# 4. Use a secret management service for production (AWS Secrets Manager, etc.)
# 5. Validate all environment variables on application startup